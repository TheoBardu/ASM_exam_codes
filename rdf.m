% Reading the positionsn of the g(r) file and plot
clear; close all; 


style_line = '-'; %style of plot line

% Figures creation
figOO = figure();
axOO = axes(figOO);


figOH = figure();
axOH = axes(figOH);

figHH = figure();
axHH = axes(figHH);

hold([axOO, axOH, axHH], 'on')
box([axOO, axOH, axHH], 'on')

% the file code to evaluate g
step = [0:2:30];
% step = 0;
gmeans = zeros(400,3,length(step));
l = 1;

% iteration for take all the g(r)
for i = step
    
    file_loc = sprintf("/Volumes/THEO/MAGISTRALE/Materie/Atomistic Simulation Methods/Exam/rdf_data/g%04i.txt",i);
%     file_loc = sprintf("/Users/theo/Desktop/ASM/rdf_data/g%04i.txt",i);
    g = readtable(file_loc); %read the file of g
    
    g.g_OH(29:39) = g.g_OH(29:39)/8; %scale the first peak of the gOH

    %create the mean curve
    gmeans(:,:,l) = [g.g_OO, g.g_OH, g.g_HH];
    
    l = l+1;
    
    
    %adding into plot
    plot(axOO,g.r,g.g_OO,style_line,'LineWidth',1.5)
    plot(axOH,g.r,g.g_OH, style_line,'LineWidth',1.5)
    plot(axHH, g.r,g.g_HH, style_line,'LineWidth',1.5)
end

hold([axOO, axOH, axHH],"off")

%taking the mean curve for all the iterations
gmeans = mean(gmeans,3);


%titles
title(axOO,"Radial Distribution Function for O-O")
title(axOH,"Radial Distribution Function for O-H")
title(axHH,"Radial Distribution Function for H-H")

%generalities
xlabel([axOO, axOH, axHH],'r [Å]')
ylabel([axOO, axOH, axHH],'g(r) [a.u.]')
set([axOO, axOH, axHH],'FontSize',18)
xlim([axOO, axOH, axHH],[0,6.20])

%annotation for gOH for the first peak
annotation(figOH,'textbox',...
    [0.265285714285714 0.738095238095238 0.074 0.0738095238095247],...
    'String',{'x 8'},...
    'FontSize',16,...
    'FitBoxToText','off',...
    'EdgeColor','none');


%% Plot Means (original)
figM = figure();
axM = axes(figM);
plot(axM, g.r,gmeans, style_line, 'LineWidth',1.5);
xlabel(axM, 'r [Å]')
ylabel(axM, 'g(r) [a.u.]')
set(axM, 'FontSize', 18)
xlim(axM, [0,6])
title(axM, 'Mean Values for all the curves')
legend(axM,'g_{OO}', 'g_{OH}', 'g_{HH}')

annotation(figM,'textbox',...
    [0.265285714285714 0.738095238095238 0.074 0.0738095238095247],...
    'String',{'x 5'},...
    'FontSize',16,...
    'FitBoxToText','off',...
    'EdgeColor','none');

%Plot meams with filtering
figMF = figure(); %create the figure
axMF = axes(figMF); %ad axes 
Hd = filter_g(); %create the low-pass filter
g_filtered = filter(Hd,gmeans); %apply the filter to the value

plot(g.r, circshift(g_filtered,-5),'LineWidth',1.5)
xlim(axMF, [0,6])





function Hd = filter_g()
%FILTER Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.11 and Signal Processing Toolbox 8.7.
% Generated on: 25-Jul-2023 15:48:11

% FIR Window Lowpass filter designed using the FIR1 function.

% All frequency values are in Hz.
Fs = 48000;  % Sampling Frequency

N     = 10;       % Order
Fc    = 3000;     % Cutoff Frequency
flag  = 'scale';  % Sampling Flag
Alpha = 2.5;      % Window Parameter

% Create the window vector for the design algorithm.
win = gausswin(N+1, Alpha);

% Calculate the coefficients using the FIR1 function.
b  = fir1(N, Fc/(Fs/2), 'low', win, flag);
Hd = dfilt.dffir(b);
end
